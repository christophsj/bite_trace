type DiaryEntry @model @auth(rules: [{ allow: owner }]) {
  day: AWSDate! @primaryKey(sortKeyFields: ["user"])
  meals: [Meal!]
  user: String!
}
type AccountData @model @auth(rules: [{ allow: owner }]) {
  id: ID! @primaryKey
  nutrientGoals: NutrientGoals!
  mealNames: [String!]
  themeModeIdx: Int
}

type NutrientGoals {
  calories: Int!
  carbPerc: Int!
  fatPerc: Int!
  proteinPerc: Int!
  otherNutrients: Nutrients
}

type Meal {
  name: String!
  index: Int!
  foods: [Food!]!
}

type Food {
  countryCode: String
  description: String!
  foodId: String!
  chosenServingSize: Int!
  chosenServingAmount: Float!
  verified: Boolean!
  brandName: String
  nutritionalContents: Nutrients!
  servingSizes: [ServingSize!]!
  imageUrl: String
}

type ServingSize {
  index: Int!
  nutritionMultiplier: Float!
  unit: String!
  value: Float!
}

type Nutrients {
  calories: Float!
  carbohydrates: Float!
  protein: Float!
  fat: Float!
  calcium: Float
  cholesterol: Float
  fiber: Float
  iron: Float
  monounsaturatedFat: Float
  polyunsaturatedFat: Float
  potassium: Float
  saturatedFat: Float
  sodium: Float
  sugar: Float
  vitaminC: Float
  vitaminD: Float
  transFat: Float
  vitaminA: Float
  vitaminE: Float
  vitaminB1: Float
  vitaminB2: Float
  vitaminPP: Float
  vitaminB6: Float
  vitaminB12: Float
  vitaminB9: Float
  vitaminK: Float
}